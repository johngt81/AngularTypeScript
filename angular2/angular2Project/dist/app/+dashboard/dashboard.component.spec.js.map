{"version":3,"file":"dashboard.component.spec.js","sourceRoot":"","sources":["dashboard.component.spec.ts"],"names":[],"mappings":";;;;;;;;;;AAAA,wBAOO,uBAAuB,CAAC,CAAA;AAC/B,wBAAuD,2BAA2B,CAAC,CAAA;AACnF,qBAAmC,eAAe,CAAC,CAAA;AACnD,iCAAmB,2BAA2B,CAAC,CAAA;AAC/C,oCAAmC,uBAAuB,CAAC,CAAA;AAC3D,uBAAuB,iBAAiB,CAAC,CAAA;AACzC,uBAAwC,WAAW,CAAC,CAAA;AAEpD,kBAAQ,CAAC,sBAAsB,EAAE;IAC/B,IAAI,OAA6B,CAAC;IAClC;QAAA;QAEA,CAAC;QADC,6BAAQ,GAAR,cAAW,CAAC;QACd,iBAAC;IAAD,CAAC,AAFD,IAEC;IACD,6BAAmB,CAAC,cAAM,OAAA,CAAC,wCAAkB,EAAE,uBAAc,EAAE,cAAO,CAAC,eAAM,EAAE,EAAC,QAAQ,EAAE,UAAU,EAAC,CAAC,CAAC,EAA7E,CAA6E,CAAC,CAAC;IACzG,oBAAU,CAAC,gBAAM,CAAC,CAAC,8BAAoB,CAAC,EAAE,UAAU,GAAyB;QAC3E,OAAO,GAAG,GAAG,CAAC;IAChB,CAAC,CAAC,CAAC,CAAC;IAEJ,YAAE,CAAC,6BAA6B,EAAE,gBAAM,CAAC,CAAC,wCAAkB,CAAC,EACzD,UAAC,SAA6B;QAChC,gBAAM,CAAC,SAAS,CAAC,CAAC,UAAU,EAAE,CAAC;IACjC,CAAC,CAAC,CAAC,CAAC;IAEJ,YAAE,CAAC,6BAA6B,EAAE,gBAAM,CAAC,EAAE,EAAE;QAC3C,MAAM,CAAC,OAAO,CAAC,WAAW,CAAC,gCAAgC,CAAC;aACzD,IAAI,CAAC,UAAC,OAA8B;YACnC,IAAI,KAAK,GAAG,OAAO,CAAC,YAAY,CAAC,KAAK,CAAC,qBAAE,CAAC,SAAS,CAAC,wCAAkB,CAAC,CAAC,CAAC;YACzE,gBAAM,CAAC,KAAK,CAAC,CAAC,UAAU,EAAE,CAAC;YAC3B,gBAAM,CAAC,KAAK,CAAC,iBAAiB,CAAC,CAAC,UAAU,EAAE,CAAC;QAC/C,CAAC,CAAC,CAAC;IACP,CAAC,CAAC,CAAC,CAAC;AACN,CAAC,CAAC,CAAC;AASH;IAAA;IACA,CAAC;IARD;QAAC,gBAAS,CAAC;YACT,QAAQ,EAAE,MAAM;YAChB,QAAQ,EAAE,qEAET;YACD,UAAU,EAAE,CAAC,wCAAkB,CAAC;SACjC,CAAC;;wCAAA;IAEF,uCAAC;AAAD,CAAC,AADD,IACC","sourcesContent":["import {\n  beforeEach,\n  beforeEachProviders,\n  describe,\n  expect,\n  it,\n  inject,\n} from '@angular/core/testing';\nimport { ComponentFixture, TestComponentBuilder } from '@angular/compiler/testing';\nimport { Component, provide } from '@angular/core';\nimport { By } from '@angular/platform-browser';\nimport { DashboardComponent } from './dashboard.component';\nimport { Router } from '@angular/router';\nimport { Product, ProductService } from '../shared';\n\ndescribe('Component: Dashboard', () => {\n  let builder: TestComponentBuilder;\n  class MockRouter{\n    navigate(){}\n  }\n  beforeEachProviders(() => [DashboardComponent, ProductService, provide(Router, {useClass: MockRouter})]);\n  beforeEach(inject([TestComponentBuilder], function (tcb: TestComponentBuilder) {\n    builder = tcb;\n  }));\n\n  it('should inject the component', inject([DashboardComponent],\n      (component: DashboardComponent) => {\n    expect(component).toBeTruthy();\n  }));\n\n  it('should create the component', inject([], () => {\n    return builder.createAsync(DashboardComponentTestController)\n      .then((fixture: ComponentFixture<any>) => {\n        let query = fixture.debugElement.query(By.directive(DashboardComponent));\n        expect(query).toBeTruthy();\n        expect(query.componentInstance).toBeTruthy();\n      });\n  }));\n});\n\n@Component({\n  selector: 'test',\n  template: `\n    <angular2-project-dashboard></angular2-project-dashboard>\n  `,\n  directives: [DashboardComponent]\n})\nclass DashboardComponentTestController {\n}\n\n"]}